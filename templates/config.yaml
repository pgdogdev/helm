apiVersion: v1
kind: ConfigMap
metadata:
    name: {{ include "pgdog.fullname" . }}
data:
    # This is pgdog.toml. You can configure anything here, incl. databases.
    # Note: don't change the port value, since it's pulled from Values.
    pgdog.toml: |
        [general]
        port                      =   {{ .Values.port }}
        workers                   =   {{ coalesce .Values.workers 2 }}
        default_pool_size         =   {{ coalesce .Values.defaultPoolSize 10 }}
        min_pool_size             =   {{ coalesce .Values.minPoolSize 1 }}
        pooler_mode               =   {{ .Values.poolerMode | default "transaction" | quote }}
        {{- if .Values.healthcheckPort }}
        healthcheck_port          =   {{ .Values.healthcheckPort }}
        {{- end }}
        healthcheck_interval      =   {{ coalesce .Values.healthcheckInterval 30_000 }}
        idle_healthcheck_interval =   {{ coalesce .Values.idleHealthcheckInterval 30_000 }}
        idle_healthcheck_delay    =   {{ coalesce .Values.idleHealthcheckDelay 5_000 }}
        healthcheck_timeout       =   {{ coalesce .Values.healthcheckTimeout 5_000 }}
        ban_timeout               =   {{ coalesce .Values.banTimeout 300_000 }}
        rollback_timeout          =   {{ coalesce .Values.rollbackTimeout 5_000 }}
        load_balancing_strategy   =   {{ .Values.loadBalancingStrategy | default "round_robin" | quote }}
        read_write_strategy       =   {{ .Values.readWriteStrategy | default "conservative" | quote }}
        read_write_split          =   {{ .Values.readWriteSplit | default "exclude_primary" | quote }}
        {{- if .Values.tlsCertificate }}
        tls_certificate           =   {{ .Values.tlsCertificate | quote }}
        {{- end }}
        {{- if .Values.tlsPrivateKey }}
        tls_private_key           =   {{ .Values.tlsPrivateKey | quote }}
        {{- end }}
        tls_verify                =   {{ .Values.tlsVerify | default "prefer" | quote }}
        {{- if .Values.tlsServerCaCertificate }}
        tls_server_ca_certificate =   {{ .Values.tlsServerCaCertificate | quote }}
        {{- end}}
        shutdown_timeout          =   {{ coalesce .Values.shutdownTimeout 60_000 }}
        prepared_statements       =   {{ .Values.preparedStatements | default "extended" | quote }}
        {{- if .Values.preparedStatementsLimit }}
        prepared_statements_limit =   {{ .Values.preparedStatementsLimit }}
        {{- end}}
        {{- if .Values.queryCacheLimit }}
        query_cache_limit         =   {{ .Values.queryCacheLimit | quote }}
        {{- end }}
        passthrough_auth          =   {{ .Values.passthroughAuth | default "disabled" | quote }}
        connect_timeout           =   {{ coalesce .Values.connectTimeout 5_000 }}
        connect_attempts          =   {{ coalesce .Values.connectAttempts 1 }}
        connect_attempt_delay     =   {{ coalesce .Values.connectAttemptDelay 0 }}
        {{- if .Values.queryTimeout }}
        query_timeout             =   {{ .Values.queryTimeout }}
        {{- end }}
        checkout_timeout          =   {{ coalesce .Values.checkoutTimeout 5_000 }}
        dry_run                   =   {{ .Values.dryRun | default "false" }}
        {{- if .Values.idleTimeout }}
        idle_timeout              =   {{ .Values.idleTimeout }}
        {{- end }}
        {{- if .Values.clientIdleTimeout }}
        client_idle_timeout       =   {{ .Values.clientIdleTimeout | quote }}
        {{- end }}
        mirror_queue              =   {{ coalesce .Values.mirrorQueue 128 }}
        mirror_exposure           =   {{ coalesce .Values.mirrorExposure 1.0 }}
        auth_type                 =   {{ .Values.authType | default "scram" | quote }}
        cross_shard_disabled      =   {{ .Values.crossShardDisabled | default "false" }}
        {{- if .Values.dnsTtl }}
        dns_ttl                   =   {{ .Values.dnsTtl }}
        {{- end }}
        {{- if .Values.pubSubChannelSize }}
        pub_sub_channel_size      =   {{ .Values.pubSubChannelSize }}
        {{- end }}
        openmetrics_port = {{ coalesce .Values.openMetricsPort 9090 }}
        openmetrics_namespace = {{ .Values.openMetricsNamespace | default "pgdog_" | quote }}
        server_lifetime = {{ coalesce .Values.serverLifetime 86400000 }}

        {{- range .Values.databases }}
        [[databases]]
        name = {{ .name | quote }}
        host = {{ .host | quote }}
        port = {{ coalesce .port 5432 }}
        shard = {{ coalesce .shard 0 }}
        {{- if .databaseName }}
        database_name = {{ .databaseName | quote }}
        {{- end }}
        {{- if .user }}
        user = "{{ .user | quote }}"
        {{- end }}
        {{- if .password }}
        password = "{{ .password | quote }}"
        {{- end }}
        {{- if .poolSize }}
        pool_size = {{ .poolSize }}
        {{- end }}
        {{- if .minPoolSize }}
        min_pool_size = {{ .minPoolSize }}
        {{- end }}
        {{- if .poolerMode }}
        pooler_mode = {{ .poolerMode | quote }}
        {{- end }}
        {{- if .statementTimeout }}
        statement_timeout = {{ .statementTimeout }}
        {{- end }}
        {{- if .idleTimeout }}
        idle_timeout = {{ .idleTimeout }}
        {{- end }}
        {{- if .readOnly }}
        read_only = {{ .readOnly }}
        {{- end }}
        {{- if .role }}
        role = {{ .role | quote }}
        {{- end }}
        {{- if .serverLifetime }}
        server_lifetime = {{ .serverLifetime }}
        {{- end }}
        {{- end }}

        {{- range .Values.mirrors }}
        [[mirroring]]
        source_db = {{ .sourceDb | quote }}
        destination_db = {{ .destinationDb | quote }}
        {{- if .queueDepth }}
        queue_depth = {{ .queueDepth }}
        {{- end}}
        {{- if .exposure }}
        exposure = {{ .exposure }}
        {{- end }}
        {{- end }}

        {{- if .Values.adminPassword }}
        [admin]
        password = {{ .Values.adminPassword | quote }}
        {{- end }}
